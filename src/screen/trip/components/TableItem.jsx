import React, { useState } from 'react';
import ModalBasic from '../../../components/ModalBasic';
import AuthService from '../../../services/AuthService';
import {
  formatDate,
  formatDateTime,
  formatPhoneNumber,
} from '../../../utils/Utils';

const statusMapping = {
  0: 'PENDING',
  1: 'GOING_TO_PICKUP',
  2: 'GOING',
  3: 'COMPLETED',
  4: 'CANCELED',
  5: 'TIMEDOUT',
};

const statusStyles = {
  PENDING: 'bg-orange-100 text-orange-600', //
  GOING_TO_PICKUP: 'bg-blue-100 text-blue-600', //
  GOING: 'bg-blue-500 text-white', //
  COMPLETED: 'bg-green-500 text-white', //
  CANCELED: 'bg-red-500 text-white', //
  TIMEDOUT: 'bg-gray-200 text-black', //
};

function TableItem(props) {
  const [detailModal, setDetailModal] = useState(false);
  const [cancelTripModal, setCancelTripModal] = useState(false);
  // const [verifyModalOpen, setVerifyModalOpen] = useState(false);
  // const [updateModalOpen, setUpdateModalOpen] = useState(false);
  // const [verifyId, setVerifyId] = useState(null);
  // const [verifyTo, setVerifyTo] = useState(null);
  // const [verifiedToValidation, setVerifiedToValidation] = useState(null);

  // const verifyDriver = async () => {
  //   try {
  //     const payload = {
  //       id: verifyId,
  //       verifiedTo: verifyTo,
  //     };
  //     const result = await AuthService.verifyDriver(payload);
  //     if (result.status === 200) {
  //       window.location.reload();
  //     }
  //   } catch {}
  // };

  // const [document, setDocument] = useState(null);
  // const fetchDriverDetail = async () => {
  //   try {
  //     const result = await AuthService.getDriverDocument(props.id);
  //     console.log(result.data);
  //     setDocument(result.data);
  //     // if (result.status === 200) {
  //     //   console.log(result.data.items);
  //     //   setList(result.data.items);
  //     // }
  //   } catch {}
  // };

  const handleCancelTrip = async () => {
    try {
      const result = await AuthService.cancelTrip(props.id);
      if (result.status === 200) {
        setDetailModal(false);
        setCancelTripModal(false);
        window.location.reload();
      } else {
      }
    } catch {}
  };

  return (
    <>
      <tr className={`cursor-pointer`}>
        <td
          className='px-2 py-3 first:pl-5 last:pr-5 whitespace-nowrap'
          onClick={(e) => {
            e.stopPropagation();
            setDetailModal(true);
          }}
        >
          <div className='text-left'>
            <div
              className={`text-xs inline-flex font-medium rounded-full text-center px-2.5 py-1 ${
                statusStyles[statusMapping[props.status]]
              }`}
            >
              {statusMapping[props.status]}
            </div>
          </div>
        </td>

        <td className='px-2 py-3 first:pl-5 last:pr-5 whitespace-nowrap'>
          <div className='text-left'>
            {props.driver?.name ? props.driver?.name : '-'}
          </div>
        </td>

        <td className='px-2 py-3 first:pl-5 last:pr-5 whitespace-nowrap'>
          <div className='text-left'>
            {props.driver?.phone ? formatPhoneNumber(props.driver?.phone) : '-'}
          </div>
        </td>

        <td className='px-2 py-3 first:pl-5 last:pr-5 whitespace-nowrap'>
          <div className='text-left'>{props.booker?.name}</div>
        </td>

        <td className='px-2 py-3 first:pl-5 last:pr-5 whitespace-nowrap'>
          <div className='text-left'>
            {formatPhoneNumber(props.booker?.phone)}
          </div>
        </td>

        <td className='px-2 py-3 first:pl-5 last:pr-5 whitespace-nowrap'>
          <div className='text-left'>{props.startLocation?.address}</div>
        </td>

        <td className='px-2 py-3 first:pl-5 last:pr-5 whitespace-nowrap'>
          <div className='text-left'>{props.endLocation?.address}</div>
        </td>

        <td className='w-px px-2 py-3 first:pl-5 last:pr-5 whitespace-nowrap'>
          {props.status === 1 || props.status === 2 ? (
            <button
              className={`text-white bg-indigo-500 btn border-slate-200 hover:border-slate-300`}
              onClick={(e) => {
                e.stopPropagation();
                setCancelTripModal(true);
              }}
            >
              HU·ª∂ CHUY·∫æN
            </button>
          ) : (
            <>-</>
          )}
        </td>
      </tr>
      <ModalBasic
        modalOpen={detailModal}
        setModalOpen={setDetailModal}
        title='Th√¥ng tin chuy·∫øn chi ti·∫øt'
      >
        <div className='px-5 py-4'>
          <div className='space-y-3'>
            <h1 className='text-base font-bold'>Th√¥ng tin t√†i x·∫ø üë®‚Äçüíº</h1>

            <div className='flex gap-4'>
              <div className='flex items-center justify-center w-1/4 h-full'>
                <img
                  className='bg-contain rounded-2xl'
                  src={
                    props.driver?.avatarUrl
                      ? props.driver?.avatarUrl
                      : 'https://cdn-icons-png.flaticon.com/512/3177/3177440.png'
                  }
                  style={{ height: 'auto', width: 'auto' }}
                />
              </div>
              <div className='flex flex-col flex-1'>
                <div>
                  <label
                    className='block mb-1 text-sm font-medium'
                    htmlFor='name'
                  >
                    ID
                  </label>
                  <input
                    value={props.driver?.id}
                    disabled
                    className='w-full px-2 py-1 form-input'
                    type='text'
                    required
                  />
                </div>

                <div>
                  <label
                    className='block mb-1 text-sm font-medium'
                    htmlFor='name'
                  >
                    T√™n t√†i x·∫ø
                  </label>
                  <input
                    value={props.driver?.name}
                    disabled
                    className='w-full px-2 py-1 form-input'
                    type='text'
                    required
                  />
                </div>

                <div>
                  <label
                    className='block mb-1 text-sm font-medium'
                    htmlFor='name'
                  >
                    S·ªë ƒëi·ªán tho·∫°i
                  </label>
                  <input
                    value={formatPhoneNumber(props.driver?.phone)}
                    disabled
                    className='w-full px-2 py-1 form-input'
                    type='text'
                    required
                  />
                </div>
              </div>
            </div>

            <h1 className='text-base font-bold'>Th√¥ng tin ng∆∞·ªùi ƒë·∫∑t üßî</h1>
            <div className='flex gap-4'>
              <div className='flex items-center justify-center w-1/4 h-full'>
                <img
                  className='bg-contain rounded-2xl'
                  src={
                    props.booker?.avatarUrl
                      ? props.booker?.avatarUrl
                      : 'https://cdn-icons-png.flaticon.com/512/3177/3177440.png'
                  }
                  style={{ height: 'auto', width: 'auto' }}
                />
              </div>
              <div className='flex flex-col flex-1'>
                <div>
                  <label
                    className='block mb-1 text-sm font-medium'
                    htmlFor='name'
                  >
                    ID
                  </label>
                  <input
                    value={props.booker?.id}
                    disabled
                    className='w-full px-2 py-1 form-input'
                    type='text'
                    required
                  />
                </div>

                <div>
                  <label
                    className='block mb-1 text-sm font-medium'
                    htmlFor='name'
                  >
                    T√™n ng∆∞·ªùi ƒë·∫∑t
                  </label>
                  <input
                    value={props.booker?.name}
                    disabled
                    className='w-full px-2 py-1 form-input'
                    type='text'
                    required
                  />
                </div>

                <div>
                  <label
                    className='block mb-1 text-sm font-medium'
                    htmlFor='name'
                  >
                    S·ªë ƒëi·ªán tho·∫°i
                  </label>
                  <input
                    value={formatPhoneNumber(props.booker?.phone)}
                    disabled
                    className='w-full px-2 py-1 form-input'
                    type='text'
                    required
                  />
                </div>
              </div>
            </div>

            {props.booker?.id !== props.passenger?.id && (
              <>
                <h1 className='text-base font-bold'>Th√¥ng tin ng∆∞·ªùi ƒëi üßì</h1>
                <div className='flex gap-4'>
                  <div className='flex flex-col flex-1'>
                    <div>
                      <label
                        className='block mb-1 text-sm font-medium'
                        htmlFor='name'
                      >
                        T√™n ng∆∞·ªùi ƒëi
                      </label>
                      <input
                        value={props.passenger?.name}
                        disabled
                        className='w-full px-2 py-1 form-input'
                        type='text'
                        required
                      />
                    </div>

                    <div>
                      <label
                        className='block mb-1 text-sm font-medium'
                        htmlFor='name'
                      >
                        S·ªë ƒëi·ªán tho·∫°i
                      </label>
                      <input
                        value={formatPhoneNumber(props.passenger?.phone)}
                        disabled
                        className='w-full px-2 py-1 form-input'
                        type='text'
                        required
                      />
                    </div>
                  </div>
                </div>
              </>
            )}

            <h1 className='text-base font-bold'>Th√¥ng tin chuy·∫øn ƒëi üöó</h1>
            <>
              <div>
                <label
                  className='block mb-1 text-sm font-medium'
                  htmlFor='name'
                >
                  Kho·∫£ng c√°ch chuy·∫øn ƒëi
                </label>
                <input
                  value={props.distance + 'km'}
                  disabled
                  className='w-full px-2 py-1 form-input'
                  type='text'
                  required
                />
              </div>

              <div>
                <label
                  className='block mb-1 text-sm font-medium'
                  htmlFor='name'
                >
                  Gi√° c∆∞·ªõc
                </label>
                <input
                  value={props.price + 'ƒë'}
                  disabled
                  className='w-full px-2 py-1 form-input'
                  type='text'
                  required
                />
              </div>

              <div>
                <label
                  className='block mb-1 text-sm font-medium'
                  htmlFor='name'
                >
                  L·ªùi nh·∫Øn c·ªßa kh√°ch
                </label>
                <input
                  value={props.note}
                  disabled
                  className='w-full px-2 py-1 form-input'
                  type='text'
                  required
                />
              </div>

              <div>
                <label
                  className='block mb-1 text-sm font-medium'
                  htmlFor='name'
                >
                  Th·ªùi ƒëi·ªÉm b·∫Øt ƒë·∫ßu
                </label>
                <input
                  value={formatDateTime(props.startTime)}
                  disabled
                  className='w-full px-2 py-1 form-input'
                  type='text'
                  required
                />
              </div>

              <div>
                <label
                  className='block mb-1 text-sm font-medium'
                  htmlFor='name'
                >
                  Th·ªùi ƒëi·ªÉm t√†i x·∫ø ƒë√≥n kh√°ch
                </label>
                <input
                  value={formatDateTime(props.pickupTime)}
                  disabled
                  className='w-full px-2 py-1 form-input'
                  type='text'
                  required
                />
              </div>

              {props.status === 3 && (
                <>
                  <div>
                    <label
                      className='block mb-1 text-sm font-medium'
                      htmlFor='name'
                    >
                      Th·ªùi ƒëi·ªÉm k·∫øt th√∫c
                    </label>
                    <input
                      value={formatDateTime(props.endTime)}
                      disabled
                      className='w-full px-2 py-1 form-input'
                      type='text'
                      required
                    />
                  </div>
                </>
              )}

              <h2 className='text-base font-semibold'>‚Ä¢ ƒêi·ªÉm ƒë√≥n kh√°ch üìç</h2>
              <div className='flex flex-col flex-1'>
                <div>
                  <label
                    className='block mb-1 text-sm font-medium'
                    htmlFor='name'
                  >
                    ID ƒëi·ªÉm ƒë√≥n
                  </label>
                  <input
                    value={props.startLocation?.id}
                    disabled
                    className='w-full px-2 py-1 form-input'
                    type='text'
                    required
                  />
                </div>

                <div>
                  <label
                    className='block mb-1 text-sm font-medium'
                    htmlFor='name'
                  >
                    ƒê·ªãa ch·ªâ c·ª• th·ªÉ
                  </label>
                  <input
                    value={props.startLocation?.address}
                    disabled
                    className='w-full px-2 py-1 form-input'
                    type='text'
                    required
                  />
                </div>

                <div>
                  <label
                    className='block mb-1 text-sm font-medium'
                    htmlFor='name'
                  >
                    Kinh ƒë·ªô; Vƒ© ƒë·ªô
                  </label>
                  <input
                    value={
                      props.startLocation?.latitude +
                      '; ' +
                      props.startLocation?.longitude
                    }
                    disabled
                    className='w-full px-2 py-1 form-input'
                    type='text'
                    required
                  />
                </div>
              </div>
              <h2 className='text-base font-semibold'>‚Ä¢ ƒêi·ªÉm tr·∫£ kh√°ch üìç</h2>
              <div className='flex flex-col flex-1'>
                <div>
                  <label
                    className='block mb-1 text-sm font-medium'
                    htmlFor='name'
                  >
                    ID ƒëi·ªÉm tr·∫£
                  </label>
                  <input
                    value={props.endLocation?.id}
                    disabled
                    className='w-full px-2 py-1 form-input'
                    type='text'
                    required
                  />
                </div>

                <div>
                  <label
                    className='block mb-1 text-sm font-medium'
                    htmlFor='name'
                  >
                    ƒê·ªãa ch·ªâ c·ª• th·ªÉ
                  </label>
                  <input
                    value={props.endLocation?.address}
                    disabled
                    className='w-full px-2 py-1 form-input'
                    type='text'
                    required
                  />
                </div>

                <div>
                  <label
                    className='block mb-1 text-sm font-medium'
                    htmlFor='name'
                  >
                    Kinh ƒë·ªô; Vƒ© ƒë·ªô
                  </label>
                  <input
                    value={
                      props.endLocation?.latitude +
                      '; ' +
                      props.endLocation?.longitude
                    }
                    disabled
                    className='w-full px-2 py-1 form-input'
                    type='text'
                    required
                  />
                </div>
              </div>
            </>

            <h1 className='text-base font-bold'>Th√¥ng tin xe üöñ</h1>
            <div>
              <label className='block mb-1 text-sm font-medium' htmlFor='name'>
                Bi·ªÉn s·ªë xe
              </label>
              <input
                value={props.driver?.car?.licensePlate}
                disabled
                className='w-full px-2 py-1 form-input'
                type='text'
                required
              />
            </div>

            <div>
              <label className='block mb-1 text-sm font-medium' htmlFor='name'>
                H√£ng xe
              </label>
              <input
                value={props.driver?.car?.make}
                disabled
                className='w-full px-2 py-1 form-input'
                type='text'
                required
              />
            </div>

            <div>
              <label className='block mb-1 text-sm font-medium' htmlFor='name'>
                D√≤ng xe
              </label>
              <input
                value={props.driver?.car?.model}
                disabled
                className='w-full px-2 py-1 form-input'
                type='text'
                required
              />
            </div>

            {/* 
            <div>
              <label className='block mb-1 text-sm font-medium' htmlFor='name'>
                Gi·ªõi t√≠nh
              </label>
              <div
                className={`text-xs inline-flex font-medium rounded-full text-center px-2.5 py-1 ${
                  props.gender === 1
                    ? 'bg-emerald-100 text-emerald-600'
                    : 'bg-amber-100 text-amber-500'
                } `}
              >
                {props.gender === 1 ? 'Nam' : 'N·ªØ'}
              </div>
            </div>

            <div>
              <label className='block mb-1 text-sm font-medium' htmlFor='name'>
                Ng√†y th√°ng nƒÉm sinh
              </label>
              <input
                value={props.createTime.substring(0, 10)}
                disabled
                className='w-full px-2 py-1 form-input'
                required
              />
            </div>

            <div>
              <label className='block mb-1 text-sm font-medium' htmlFor='email'>
                S·ªë ƒëi·ªán tho·∫°i
              </label>
              <input
                value={props.phone}
                disabled
                className='w-full px-2 py-1 form-input'
                required
              />
            </div>

            <div>
              <label
                className='block mb-1 text-sm font-medium'
                htmlFor='feedback'
              >
                Tr·∫°ng th√°i
              </label>
              <div
                className={`text-xs inline-flex font-medium rounded-full text-center px-2.5 py-1 ${
                  props.verifyTo > today
                    ? 'bg-emerald-100 text-emerald-600'
                    : 'bg-rose-100 text-rose-500'
                } `}
              >
                {props.verifyTo > today ? 'ƒê√£ x√°c th·ª±c' : 'Ch∆∞a x√°c th·ª±c'}
              </div>
            </div>

            <div>
              <label className='block mb-1 text-sm font-medium' htmlFor='email'>
                Th·ªùi gian ƒëƒÉng k√Ω
              </label>
              <input
                value={
                  props.createTime.substring(0, 10) +
                  ' ' +
                  props.createTime.substring(11, 19)
                }
                disabled
                className='w-full px-2 py-1 form-input'
                required
              />
            </div>

            <div>
              <label className='block mb-1 text-sm font-medium' htmlFor='email'>
                Th·ªùi gian c·∫≠p nh·∫≠t g·∫ßn nh·∫•t
              </label>
              <input
                value={
                  props.updatedTime.substring(0, 10) +
                  ' ' +
                  props.updatedTime.substring(11, 19)
                }
                disabled
                className='w-full px-2 py-1 form-input'
                required
              />
            </div>

            {props.disabledReason && (
              <div>
                <label
                  className='block mb-1 text-sm font-medium'
                  htmlFor='email'
                >
                  L√Ω do b·ªã kh√≥a
                </label>
                <textarea
                  value={props.disabledReason}
                  disabled
                  className='w-full px-2 py-1 form-input'
                  required
                />
              </div>
            )}

            <div>
              <label className='block mb-1 text-sm font-medium' htmlFor='email'>
                Bi·ªÉn s·ªë xe
              </label>
              <input
                value={props.car.licensePlate}
                disabled
                className='w-full px-2 py-1 form-input'
                required
              />
            </div>

            <div>
              <label className='block mb-1 text-sm font-medium' htmlFor='email'>
                H√£ng xe
              </label>
              <input
                value={props.car.make}
                disabled
                className='w-full px-2 py-1 form-input'
                required
              />
            </div>

            <div>
              <label className='block mb-1 text-sm font-medium' htmlFor='email'>
                D√≤ng xe
              </label>
              <input
                value={props.car.model}
                disabled
                className='w-full px-2 py-1 form-input'
                required
              />
            </div>

            {props.verifyTo > today && (
              <div>
                <label
                  className='block mb-1 text-sm font-medium'
                  htmlFor='email'
                >
                  C√≤n h·∫°n ƒë·∫øn ng√†y
                </label>
                <input
                  value={props.verifyTo.substring(0, 10)}
                  disabled
                  className='w-full px-2 py-1 form-input'
                  required
                />
              </div>
            )}

            {document && (
              <div>
                <label
                  className='block mb-1 text-sm font-medium'
                  htmlFor='email'
                >
                  Gi·∫•y ph√©p
                </label>
                {document.map((doc) => (
                  <img key={doc.id} src={doc.url} alt={`Document ${doc.id}`} />
                ))}
              </div>
            )} */}
          </div>
        </div>

        <div className='px-5 py-4 border-t border-slate-200'>
          <div className='flex flex-wrap justify-end space-x-2'>
            <button
              className='btn-sm border-slate-200 hover:border-slate-300 text-slate-600'
              onClick={(e) => {
                e.stopPropagation();
                setDetailModal(false);
              }}
            >
              ƒê√≥ng
            </button>
          </div>
        </div>
      </ModalBasic>

      <ModalBasic
        modalOpen={cancelTripModal}
        setModalOpen={setCancelTripModal}
        title='B·∫°n c√≥ mu·ªën hu·ª∑ chuy·∫øn xe n√†y?'
      >
        <div className='px-5 py-4'>
          <div className='space-y-3'>
            <div className='font-bold'>
              B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën hu·ª∑ chuy·∫øn xe n√†y?
            </div>
            <div className=''>
              L∆∞u √Ω: C√°c giao d·ªãch ƒë√£ ƒë∆∞·ª£c th·ª±c hi·ªán gi·ªØa t√†i x·∫ø v√† kh√°ch s·∫Ω
              kh√¥ng ƒë∆∞·ª£c ho√†n l·∫°i. Vui l√≤ng li√™n h·ªá tr·ª±c ti·∫øp v·ªõi t√†i x·∫ø ƒë·ªÉ x·ª≠
              l√Ω n·∫øu c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o v·ªÅ c√°c v·∫•n ƒë·ªÅ ho√†n ti·ªÅn.
            </div>
          </div>
        </div>

        <div className='px-5 py-4 border-t border-slate-200'>
          <div className='flex flex-wrap justify-end space-x-2'>
            <button
              className='btn-sm border-slate-200 hover:border-slate-300 text-slate-600'
              onClick={(e) => {
                e.stopPropagation();
                setCancelTripModal(false);
              }}
            >
              ƒê√≥ng
            </button>
            <button
              className='text-white bg-indigo-500 btn-sm hover:bg-indigo-600'
              onClick={handleCancelTrip}
            >
              Hu·ª∑ chuy·∫øn
            </button>
          </div>
        </div>
      </ModalBasic>
    </>
  );
}

export default TableItem;
